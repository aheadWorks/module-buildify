<?php
namespace Aheadworks\Buildify\Block\Adminhtml\Element;

use Magento\Framework\App\ObjectManager;
use Magento\Framework\Data\Form\Element\Editor as FormEditor;
use Magento\Framework\View\Element\BlockFactory;
use Aheadworks\Buildify\Model\Entity\Config as EntityConfig;
use Aheadworks\Buildify\Model\Config as ModuleConfig;
use Aheadworks\Buildify\Block\Adminhtml\Buildify\Builder;

class Editor extends FormEditor
{
    /**
     * @var BlockFactory
     */
    private $blockFactory;

    /**
     * @param \Magento\Framework\Data\Form\Element\Factory $factoryElement
     * @param \Magento\Framework\Data\Form\Element\CollectionFactory $factoryCollection
     * @param \Magento\Framework\Escaper $escaper
     * @param BlockFactory $blockFactory
     * @param array $data
     * @param \Magento\Framework\Serialize\Serializer\Json|null $serializer
     * @param \Magento\Framework\Math\Random|null $random
     * @param \Magento\Framework\View\Helper\SecureHtmlRenderer|null $secureRenderer
     */
    public function __construct(
        \Magento\Framework\Data\Form\Element\Factory $factoryElement,
        \Magento\Framework\Data\Form\Element\CollectionFactory $factoryCollection,
        \Magento\Framework\Escaper $escaper,
        BlockFactory $blockFactory,
        $data = [],
        ?\Magento\Framework\Serialize\Serializer\Json $serializer = null
    ) {
        $this->blockFactory = $blockFactory;
        parent::__construct(
            $factoryElement,
            $factoryCollection,
            $escaper,
            $data,
            $serializer
        );
    }

    /**
     * Returns element html
     *
     * @return string
     */
    public function getElementHtml()
    {
        if (!$this->getModuleConfig()->isEnabled()) {
            return parent::getElementHtml();
        }

        $htmlId = $this->getData('html_id');
        /** @var EntityConfig $entityConfig */
        $entityConfig = $this->getEntityConfig();
        if (!$entityConfig->isAllowed($htmlId)) {
            return parent::getElementHtml();
        }

        $block = $this->blockFactory->createBlock(Builder::class);
        $extensionAttributesKey = $entityConfig->getExtensionAttributesKey();
        $block->setTemplate('Aheadworks_Buildify::buildify/builder.phtml')
              ->setHtmlId($htmlId)
              ->setExtensionAttributesKey($extensionAttributesKey);

        return $block->toHtml();
    }

    /**
     * Retrieve Editor Resource Mapper instance
     *
     * @return ModuleConfig
     */
    private function getModuleConfig()
    {
        // phpcs:ignore Magento2.PHP.AutogeneratedClassNotInConstructor
        return ObjectManager::getInstance()->get(ModuleConfig::class);
    }

    /**
     * Retrieve Editor Resource Mapper instance
     *
     * @return BlockFactory
     */
    private function getEntityConfig()
    {
        // phpcs:ignore Magento2.PHP.AutogeneratedClassNotInConstructor
        return ObjectManager::getInstance()->get(EntityConfig::class);
    }
}
